<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
clicked = false;
option = 0;
text_alpha = 1;
text_target_alpha = 1;
text_alpha_spd = 0.04;

col_menu = c_white;
col_play = c_white;
col_quit = c_white;

countdown_place = 3;
countdown_timer_default = room_speed*0.5;
countdown_text = "3";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Countdown
countdown_place--;

switch countdown_place {
    case 2:
        countdown_text = "2";
        audio_play_sound(sfx_menu2, 1, false);
        break;
    case 1:
        countdown_text = "1";
        audio_play_sound(sfx_menu2, 1, false);
        break;
    case 0:
        countdown_text = "GO!";
        audio_play_sound(sfx_menu3, 1, false);
        o_pause_sprite.unfade = true;
    
    break;
    case -1:
        game_unpause();
        instance_destroy();
    break;
}

alarm[0] = countdown_timer_default;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the pause screen
if !clicked {
    if mouse_in((room_width/2)-20,(room_height*0.65)-5,(room_width/2)+20,(room_height*0.65)+5) {
        if mouse_check_button_pressed(mb_left) {
            // Play
            alarm[0] = countdown_timer_default;
            option = 1;
            clicked = true;
            audio_play_sound(sfx_menu2, 1, false);
        }
        if col_play == c_white audio_play_sound(sfx_menu1, 1, false);
        col_play = make_colour_rgb(200,200,200);
    } else col_play = c_white;
    
    if mouse_in((room_width*0.25)-15,(room_height*0.65)-5,(room_width*0.25)+15,(room_height*0.65)+5) {
        if mouse_check_button_pressed(mb_left) {
            // Menu
            option = 0;
            clicked = true;
            o_pause_sprite.fade_to_black = true;
            text_target_alpha = 0;
            audio_play_sound(sfx_menu3, 1, false);
            audio_stop_sound(global.music);
            global.music = undefined;
        }
        if col_menu == c_white audio_play_sound(sfx_menu1, 1, false);
        col_menu = make_colour_rgb(200,200,200);
    } else col_menu = c_white;
    
    if mouse_in((room_width*0.75)-15,(room_height*0.65)-5,(room_width*0.75)+15,(room_height*0.65)+5) {
        if mouse_check_button_pressed(mb_left) {
            // Quit
            if os_browser == browser_not_a_browser {
                game_end();
            }
        }
        if col_quit == c_white audio_play_sound(sfx_menu1, 1, false);
        col_quit = make_colour_rgb(200,200,200);
    } else col_quit = c_white;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the pause screen
draw_set_colour(c_white);
draw_set_font(f_thin);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

if option == 0 {
    if text_alpha != text_target_alpha text_alpha = approach(text_alpha,text_alpha_spd,text_target_alpha);
    draw_set_alpha(text_alpha);
    
    draw_text_transformed(room_width/2,room_height*0.35,"PAUSED",2,2,0);
    
    draw_set_colour(col_play);
    draw_text(room_width*0.5,room_height*0.65,"continue");
    
    draw_set_colour(col_menu);
    draw_text(room_width*0.25,room_height*0.65,"menu");
    
    draw_set_colour(col_quit);
    draw_text(room_width*0.75,room_height*0.65,"quit");
} else {
    draw_set_alpha(1);
    draw_text_transformed(room_width/2,room_height/2,countdown_text,2,2,0);
}

draw_set_colour(c_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
