<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_raft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the raft
// Set up variables
hp_max = 80;
hp = 80;
hspeed = -0.1;
y = water.level+83;
angle = water.cycle*3;

// Create 2 pirates on the raft
p1_x = round(random(8));
p1_y = choose(0,1,2);
pirate1 = instance_create(x,water.level+83,o_pirate);
p1_rx = -16+p1_x;
pirate1.rx = p1_rx;
p1_ry = -8-p1_y;
pirate1.ry = p1_ry;
rdis1 = sign(-p1_rx)*sqrt(p1_rx*p1_rx+p1_ry*p1_ry);
with (pirate1) {
    rdis = sign(-rx)*sqrt(rx*rx+ry*ry);
    theta = arctan(ry/rx)*180/pi;
    bottom = 5;
}
pirate1.depth = depth-0.1;

p2_x = round(random(8));
p2_y = choose(0,1,2);
pirate2 = instance_create(x,water.level+83,o_pirate);
p2_rx = 7+p2_x;
pirate2.rx = p2_rx;
p2_ry = -8-p2_y;
pirate2.ry = p2_ry;
rdis2 = sign(-p2_rx)*sqrt(p2_rx*p2_rx+p2_ry*p2_ry);
with (pirate2) {
    rdis = sign(-rx)*sqrt(rx*rx+ry*ry);
    theta = arctan(ry/rx)*180/pi;
    bottom = 5;
}
pirate2.depth = depth-0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the ship
// Float on water
y = water.level+83;
angle = water.cycle*3;

pirate1.angle = angle;
pirate2.angle = angle;

// Destroy the ship
if hp == 0 {
    instance_destroy();
    ship2 = instance_create(x,y,o_raft_sinking);
    ship2.angle = angle;
    add_screenshake(3,10);
    
    sword1 = instance_create(x+p1_rx-0.8,water.level+83,o_barrel_pirate_sword);
    sword1.depth = depth-0.2;
    sword2 = instance_create(x+p2_rx-0.8,water.level+83,o_barrel_pirate_sword);
    sword2.depth = depth-0.2;
    
    // Add to score
    score += 350;
    global.bounty += 350;
    create_text(x,y-48,"+350",c_black,room_speed*0.8,0.05,0.1,0.8,0);
    
    // Give 15-25 xp
    var n = round(random(10))+15;
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_xp_point);
    }
    
    // Give 3-7 Bt
    var n = round(random(3))+4;
    if n &gt; 4 {
        n -= 5;
        instance_create(x,y,o_bt_gold);
    }
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_bt_silver);
    }
    
    // Sink the pirates
    with pirate1 {
        instance_destroy();
        sink = instance_create(x+rx,water.level+83,o_pirate_sinking);
        sink.top = top;
        sink.depth = depth-0.1;
    }
    with pirate2 {
        instance_destroy();
        sink = instance_create(x+rx-1,water.level+83,o_pirate_sinking);
        sink.top = top;
        sink.depth = depth-0.1;
    }
}

// End the game
if x &lt; 0 {
    if !instance_exists(o_game_over) {
        instance_create(0,0,o_game_over);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_potato">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the potato and deal damage
hp = max(hp-other.damage,0);
part_particles_create(particles.psys,other.x,other.y,particles.ship_pix,random_range(4,8));
with other {instance_destroy()}
add_screenshake(choose(1,1.5,2),10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the raft and the pirates on it
draw_sprite_ext(s_raft,0,x,y,1,1,angle,c_white,1);

draw_sprite_ext(s_pirate_stand,0,x+p1_rx,y+p1_ry+rdis1*sin((angle)*pi/180),1,1,angle,c_white,1);
draw_sprite_ext(s_pirate_stand,0,x+p2_rx,y+p2_ry+rdis2*sin((angle)*pi/180),1,1,angle,c_white,1);

draw_sprite_ext(s_barrel_pirate,3,x+p1_rx-0.8,y+p1_ry+rdis1*sin((angle)*pi/180),1,1,2*angle,c_white,1);
draw_sprite_ext(s_barrel_pirate,3,x+p2_rx-0.8,y+p2_ry+rdis2*sin((angle)*pi/180),1,1,2*angle,c_white,1);


draw_set_colour(c_red);
draw_rectangle(x-11,y-48,x+11,y-46,false);
draw_set_colour(make_colour_rgb(0,255,0));
draw_rectangle(x-11,y-48,x-11+22*hp/hp_max,y-46,false);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
