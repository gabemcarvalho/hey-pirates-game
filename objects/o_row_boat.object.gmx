<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_row_boat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the row boat
// Set up variables
hp_max = 60;
hp = hp_max;
hspeed = -0.18 * global.speed_mulitplier;
y = water.level+83;
angle = water.cycle*3;

// Create 2 pirates on the ship
pirate1 = instance_create(x,water.level+83,o_pirate);
pirate1.rx = 5;
pirate1.ry = -5.5;
with (pirate1) {
    rdis = sign(-rx)*sqrt(rx*rx+ry*ry);
    theta = arctan(ry/rx)*180/pi;
    hspeed = other.hspeed;
    bottom = 1;
}
pirate1.depth = depth-0.1;

p2_x = round(random(3));
pirate2 = instance_create(x,water.level+83,o_pirate);
pirate2.rx = -10+p2_x;
pirate2.ry = -5.5;
with (pirate2) {
    rdis = sign(-rx)*sqrt(rx*rx+ry*ry);
    theta = arctan(ry/rx)*180/pi;
    hspeed = other.hspeed;
}
pirate2.depth = depth-0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the ship
// Float on water
y = water.level+83;
angle = water.cycle*3;

pirate1.angle = angle;
pirate2.angle = angle;

// Destroy the ship
if hp == 0 {
    instance_destroy();
    ship2 = instance_create(x,y,o_row_boat_sinking);
    ship2.angle = angle;
    add_screenshake(1.5,10);
    
    // Add to score
    score += 250;
    global.bounty += 250;
    create_text(x,y-18,"+250",c_black,room_speed*0.8,0.05,0.1,0.8,0);
    
    // Give 15-20 xp
    var n = round(random(5))+15;
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_xp_point);
    }
    
    // Give 3-6 Bt
    var n = round(random(3))+3;
    if n &gt; 4 {
        n -= 5;
        instance_create(x,y,o_bt_gold);
    }
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_bt_silver);
    }
    
    // Sink the pirates
    with pirate1 {
        instance_destroy();
        sink = instance_create(x+rx,water.level+83,o_pirate_sinking);
        sink.top = top;
        sink.depth = depth-0.1;
    }
    with pirate2 {
        instance_destroy();
        sink = instance_create(x+rx-1,water.level+83,o_pirate_sinking);
        sink.top = top;
        sink.depth = depth-0.1;
    }
}

// End the game
if x &lt; 0 {
    if !instance_exists(o_game_over) {
        instance_create(0,0,o_game_over);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_potato">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the potato and deal damage
hp = max(hp-other.damage,0);
part_particles_create(particles.psys,other.x,other.y,particles.ship_pix,random_range(4,8));
with other {instance_destroy()}
add_screenshake(choose(0.5,0.75,1.0),10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the ship
draw_sprite_ext(s_row_boat,0,x,y,1,1,angle,c_white,1);
draw_sprite_ext(s_row_boat_paddle,0,x,y-6,1,1,-5*angle,c_white,1);

draw_set_colour(c_red);
draw_rectangle(x-10,y-22,x+10,y-20,false);
draw_set_colour(make_colour_rgb(0,255,0));
draw_rectangle(x-10,y-22,x-10+20*hp/hp_max,y-20,false);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
