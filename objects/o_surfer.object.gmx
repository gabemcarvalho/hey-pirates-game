<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_surfboard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the surfer
hp_max = 16;
hp = 16;
y = water.level+83
angle = 0;

hspeed = -0.15;

top = choose(0,1,2,3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the barrel
// Float on water
vspeed = 1.5*background_vspeed[0];
angle = water.cycle*5;

// Destroy the ship
if hp == 0 {
    instance_destroy();
    barrel2 = instance_create(x,y,o_surfer_sinking);
    barrel2.angle = angle;
    barrel2.top = top;
    add_screenshake(3,10);
    
    // Add to score
    score += 100;
    create_text(x+9,y-12,"100",c_black,room_speed*0.8,0.05,0.1,0.58,0);
    
    // Give 2-5 xp
    var n = round(random(3))+2;
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_xp_point);
    }
    
    // Give 1-2 Bt
    var n = round(random_range(0,1))+1;
    for (i = 0; i &lt; n; i++) {
        instance_create(x,y,o_bt_silver);
    }
    
}

// End the game
if x &lt; 0 {
    if !instance_exists(o_game_over) {
        instance_create(0,0,o_game_over);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_potato">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the potato and deal damage
hp = max(hp-other.damage,0);
part_particles_create(particles.psys,other.x,other.y,particles.ship_pix,random_range(4,8));
with other {instance_destroy()}
add_screenshake(choose(1,1.5,2),10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the surfer
draw_sprite_ext(s_surfboard,1,x,y,1,1,angle,c_white,1);
draw_sprite_ext(s_pirate_top,top,x,y-7,1,1,angle,c_white,1);
draw_sprite_ext(s_barrel_pirate,3,x-0.8,y-7,1,1,2*angle,c_white,1);

draw_set_colour(c_red);
draw_rectangle(x-6,y-21,x+6,y-20,false);
draw_set_colour(make_colour_rgb(0,255,0));
draw_rectangle(x-6,y-21,x-6+12*hp/hp_max,y-20,false);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
