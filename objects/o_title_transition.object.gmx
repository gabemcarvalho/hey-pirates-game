<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init transition
alpha = 1;
target_alpha = 0;
spd = 0.8/room_speed;

step = 0;
stage = 1;

title_size = 0;

fast_alpha = 0;
fast_alpha_target = 1;
fast_trans = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control transition

if !fast_trans &amp;&amp; step &lt; 390 {
    if keyboard_check_pressed(vk_space) {
        fast_trans = true;
    }
}

if fast_trans = true {
    if fast_alpha != fast_alpha_target {
        fast_alpha = approach(fast_alpha,0.1,fast_alpha_target);
    } else {
        if fast_alpha_target == 1 {
        view_visible[1] = false;
        view_visible[0] = true;
        view_xview[0] = 0;
        view_yview[0] = 0;
        view_wview[0] = room_width;
        view_hview[0] = room_height;
        instance_create(room_width/2,32,o_title);
        o_title.size = 1.2;
        instance_create(room_width/2,64,o_play_button);
        o_ship_aesthetic.hspeed = 0;
        o_ship_aesthetic.x = 192;
        o_stickman.sprite_index = s_potato_man;
        if instance_exists(o_pgun) {
            with o_pgun {instance_destroy()}
        }
    instance_create(0,0,o_options);
            fast_alpha_target = 0;
        } else {
            instance_destroy();
        }
    }
}

if fast_alpha_target == 1 {
    step++;
}

// Transition Normally
if alpha != target_alpha {
    alpha = approach(alpha,spd,target_alpha);
}

if step &lt; 230 {
    view_xview[1] += 0.2
}

if step == 200 {
    target_alpha = 1;
    spd = 2/room_speed;
} else if step == 230 {
    target_alpha = 0;
    o_ship_aesthetic.hspeed = 0;
    o_ship_aesthetic.x = 192;
    view_xview[1] = 0;
    view_yview[1] = 32;
} else if step == 280 {
    o_stickman.vspd = -0.5;
    o_stickman.hspd = -0.1;
    o_stickman.grav = 0.1;
    create_text(30,48,"!",c_black,room_speed/2,1,0,0.8,0);
} else if step == 330 {
    with o_pgun {instance_destroy()}
    o_stickman.sprite_index = s_stickman_ground;
    o_stickman.image_speed = 6/room_speed;
} else if step == 370 {
    o_stickman.sprite_index = s_potato_man;
} else if step == 490 {
    // End transition
    // Switch to view 1
    view_visible[1] = false;
    view_visible[0] = true;
    add_screenshake(2,10);
    // Create title, button, and high score instances
    instance_create(room_width/2,32,o_title);
    instance_create(room_width/2,64,o_play_button);
    instance_create(0,0,o_options);
    // Destroy the transition object
    instance_destroy();
}

if step &gt; 390 {
    if view_hview[1] &lt; 96 {view_hview[1]++}
    view_wview[1] = 2.5*view_hview[1];
    if view_yview[1] &gt; 0 {view_yview[1]--}
    
    if step &gt; 430 {
        size_step = step - 430;
        if size_step &lt; 60 {
            var a = 1/1200; // or 1/1500
            var b = 1/15;   // or 17/300
            // X^2/1200 + X/15
            title_size = (-(size_step*size_step)*a)+(size_step*b);
        } else {
            title_size = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw black box / white box
draw_set_colour(c_black);
draw_set_alpha(alpha);
draw_rectangle(0,0,display_get_width(),display_get_height(),false);

draw_set_colour(c_white);
draw_set_alpha(fast_alpha);
draw_rectangle(0,0,display_get_width(),display_get_height(),false);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the title
draw_sprite_ext(s_title,0,room_width/2,32,title_size,title_size,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
