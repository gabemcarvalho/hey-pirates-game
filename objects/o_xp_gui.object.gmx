<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_xp_gui</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
image_speed = 0;
bar_size = 1;

xp_total = global.xp;
xp_offset = 0;
for (i = 1; i &lt; global.level; i++) {
    xp_offset += global.level_xp[i]
}
xp_needed = global.level_xp[global.level];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xp &gt; xp_total {

    xp_total += 0.5;
    bar_size = 1+0.1*sqrt(global.xp-xp_total);

}

if xp_total-xp_offset &gt; xp_needed {
    global.level++;
    xp_offset += xp_needed;
    xp_needed = global.level_xp[global.level];;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the xp bar
var ox = o_controller.vx*HUD_OFFSET_MULTIPLIER;
var oy = o_controller.vy*HUD_OFFSET_MULTIPLIER;

draw_sprite(s_xp_gui,0,x+ox,y+oy);
draw_sprite_ext(s_xp_bar,3,x+28+ox,y+4+oy,bar_size,bar_size,0,c_white,1);
var fill_percent = min((xp_total-xp_offset)/xp_needed,1);
draw_sprite_ext(s_xp_bar_fill,0,x+24-21*bar_size+ox,y+4+oy,50*fill_percent*bar_size,bar_size,0,c_white,1);

// Get the number of digits of the bounty
var oom = 1 // Orders of magnitude
var divscore = global.bounty;
while (divscore/10 &gt;= 1) {
    divscore = divscore/10;
    oom++
}

// Create am 6-digit string containing the score,
// and the appropriate number of zeros
var zeros = 6-oom
var score_string = "";
for (i = 0; i &lt; zeros; i++) {
    score_string = score_string+"0";
}
score_string = score_string+string(global.bounty);

// Draw the bounty
draw_set_font(global.f_micro);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_text(x+24+ox,y+12+oy,score_string);

// Draw the level
draw_set_font(global.f_big);
if global.level &lt; 10 {
    draw_text(x+11+ox,y+12+oy,"0"+string(global.level));
} else {
    draw_text(x+11+ox,y+12+oy,string(global.level));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
